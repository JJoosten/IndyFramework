#version 430

#extension GL_ARB_compute_shader : require
#extension GL_ARB_shader_storage_buffer_object : require
#extension GL_ARB_explicit_uniform_location : require
#extension GL_ARB_shader_storage_buffer_object : require


#define LOCAL_SIZE 32

layout(std140, binding = 0) buffer ocean_vertices
{
	vec3 vertices [];
	vec3 normals [];
};

layout (local_size_x = LOCAL_SIZE, local_size_y = LOCAL_SIZE, local_size_z = 1) in;

// fft kernel to compute new ocean height, we output an updated vertex buffer
void main() 
{
	/* Compute Shader Input From OpenGL 
	--- Work group dimensions ---
	gl_NumWorkGroups (uvec3)
	gl_WorkGroupSize (const uvec3)
	--- Work group and invocation IDs ---
	gl_WorkGroupID (uvec3)
	gl_LocalInvocationID (uvec3)
	--- Derived variables ---
	gl_GlobalInvocationID (uvec3)
	gl_LocalInvocationIndex (uint) */

	vertices[gl_LocalInvocationIndex].y += 0.001f;
}